#generate word ngram of a sentence
sentence = "Cowards die many times before their deaths"
#n is used for selecting n in ngrams i.e 2 for bigrams
n=2
[sentence.split()[i:i+n] for i in range(len(sentence.split())-1)]
"""
output:
[['Cowards', 'die'],
 ['die', 'many'],
 ['many', 'times'],
 ['times', 'before'],
 ['before', 'their'],
 ['their', 'deaths']]
"""
#generate character ngram for words of sentence
for word in sentence.split():
    print [word[i:i+n] for i in range(len(word)-1)]

"""
output:
['Co', 'ow', 'wa', 'ar', 'rd', 'ds']
['di', 'ie']
['ma', 'an', 'ny']
['ti', 'im', 'me', 'es']
['be', 'ef', 'fo', 'or', 're']
['th', 'he', 'ei', 'ir']
['de', 'ea', 'at', 'th', 'hs']
"""
# THIS FURTHER CODE WILL GENERATE N-GRAMS WITH THE HELP OF LIBRARAY PACKAGES
#using nltk library
from nltk import ngrams
#generate word ngram of a sentence
sentence = "Cowards die many times before their deaths"
#n is used for selecting n in ngrams i.e 2 for bigrams
n=2
list(ngrams(sentence.split(),n))
"""
output:
[('Cowards', 'die'),
 ('die', 'many'),
 ('many', 'times'),
 ('times', 'before'),
 ('before', 'their'),
 ('their', 'deaths')]
"""
#generate character ngram for words of sentence
for word in sentence.split():
    print list(ngrams(word,n))

"""
output:
[('C', 'o'), ('o', 'w'), ('w', 'a'), ('a', 'r'), ('r', 'd'), ('d', 's')]
[('d', 'i'), ('i', 'e')]
[('m', 'a'), ('a', 'n'), ('n', 'y')]
[('t', 'i'), ('i', 'm'), ('m', 'e'), ('e', 's')]
[('b', 'e'), ('e', 'f'), ('f', 'o'), ('o', 'r'), ('r', 'e')]
[('t', 'h'), ('h', 'e'), ('e', 'i'), ('i', 'r')]
[('d', 'e'), ('e', 'a'), ('a', 't'), ('t', 'h'), ('h', 's')]
"""
